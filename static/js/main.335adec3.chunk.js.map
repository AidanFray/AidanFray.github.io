{"version":3,"sources":["components/projectcard.jsx","components/githubcalendar.jsx","components/typingelement.jsx","components/landingpage.jsx","App.jsx","index.jsx"],"names":["ProjectCard","languages","langauges_logos","text","undefined","parts","split","i","length","lang","x","this","trim","push","react_default","a","createElement","style","fontSize","padding","class","console","log","className","lib","shadow","minWidth","margin","alignItems","color","props","text_color","height","width","background","url","title","card_text","border","colored","href","github_url","Component","GithubCalendar","id","data-user","data-display","src","TypingElement","words","typing_delay","typing_backspace","rnd","Math","floor","random","tmp","shuffle_list","words_to_type","print_text","dist_default","Delay","ms","Backspace","count","loop","Landing","col","typingelement","projectcard","githubcalendar","App","es","textDecoration","to","landingpage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.335adec3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardTitle, CardText, CardActions, Button, CardMenu} from 'react-mdl';\n\n\nclass ProjectCard extends Component {\n\n  languages =\n  [\n    [\"C++\", \"devicon-cplusplus-plain\"],\n    [\"Java\", \"devicon-java-plain\"],\n    [\"Python\", \"devicon-python-plain\"],\n    [\"C#\", \"devicon-csharp-plain\"],\n    [\"JS\", \"devicon-javascript-plain\"],\n    [\"HTML5\", \"devicon-html5-plain\"],\n    [\"Android\", \"devicon-android-plain\"],\n    [\"Linux\", \"devicon-linux-plain\"],\n    [\"iOS\", \"devicon-apple-original\"],\n    [\"Windows\", \"devicon-windows8-original\"]\n  ]\n\n  langauges_logos = []\n\n  languages_proc(text) {\n    var sentence = text;\n\n    if (text !== undefined) {\n      var parts = sentence.split(\",\");\n\n      for (var i = 0; i < parts.length; i++) {\n        var lang = parts[i];\n\n        for (var x = 0; x < this.languages.length; x++) {\n          if (this.languages[x][0].trim() === lang) {\n            this.langauges_logos.push(<i style={{fontSize: \"25px\", padding: \"2px\"}} class={this.languages[x][1]}></i>);\n          }\n        }\n      }\n\n      console.log(parts)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"project-item\">\n        <Card shadow={0} style={{minWidth: '250px', margin: 'auto'}}>\n\n          <CardTitle style={{alignItems: 'flex-start', color: this.props.text_color, height: '200px', width: '330px', background: 'url('+ this.props.url +') center / cover'}}>\n            <div className=\"card-title\">\n              {this.props.title}\n            </div>\n          </CardTitle>\n\n          <CardText>\n            <div className=\"card-text\">\n              {this.props.card_text}\n            </div>\n          </CardText>\n\n          <CardActions border>\n              {this.langauges_logos}\n          </CardActions>\n\n          <CardActions border>\n            <Button colored href={this.props.github_url}>GitHub</Button>\n          </CardActions>\n\n          <CardMenu style={{color: this.props.text_color}}>\n          </CardMenu>\n      </Card>\n    </div>\n  )\n}\n}\n\nexport default ProjectCard;\n","import React, { Component } from 'react';\n\n\nclass GithubCalendar extends Component {\n  render() {\n    return(\n      <div>\n        <div id=\"github-widget\" data-user=\"jcouyang\" data-display=\"calendar\"></div>\n        <script src=\"https://gh-widget.oyanglul.us/index.js\"></script>\n      </div>\n    )\n  }\n}\n\nexport default GithubCalendar;\n","import React, { Component } from 'react';\nimport Typing from 'react-typing-animation';\n\nclass TypingElement extends Component {\n\n  // New words to be placed here to be typed onto the screen\n  words =\n  [\n    //<Name>   <Color>\n    [\"Python\", \"\"],\n    [\".NET\", \"\"],\n    [\"Wireshark\", \"\"],\n    [\"Arch Linux\", \"\"],\n    [\"C++\", \"\"],\n    [\"Java\", \"\"],\n    [\"TeX\", \"\"]\n  ];\n  typing_delay = 3000;\n  typing_backspace = 20;\n\n  shuffle_list() {\n    for (var i = 0; i < this.words.length; i++) {\n\n      // Randomises the list swap position\n      var rnd = Math.floor((Math.random() * this.words.length));\n\n      var tmp = this.words[i];\n      this.words[i] = this.words[rnd];\n      this.words[rnd] = tmp;\n    }\n  }\n\n  print_text(text, color) {\n    return(\n      <h1 className=\"typing-text\" style={{color: color}}>{text}</h1>\n    )\n  }\n\n  render() {\n    this.shuffle_list();\n\n    var words_to_type = [];\n\n    // Dynamically creates the typing formatted code\n    for (var i = 0; i < this.words.length; i++) {\n      words_to_type.push(\n        <span>\n          {this.print_text(this.words[i][0], this.words[i][1])}\n          <Typing.Delay ms={this.typing_delay} />\n          <Typing.Backspace count={this.typing_backspace} />\n        </span>\n      )\n    }\n\n    return(\n      <div>\n        <Typing loop={true}>\n            {words_to_type}\n        </Typing>\n      </div>)\n    }\n  }\n\n  export default TypingElement;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport ProjectCard from './projectcard';\nimport GithubCalendar from './githubcalendar';\nimport TypingElement from './typingelement'\n\nclass Landing extends Component {\n\n  render() {\n    return(\n      <div>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <h1 className=\"title\">Aidan Fray</h1>\n            <TypingElement/>\n          </Cell>\n          <Cell col={12}>\n            <div id=\"limit\" className=\"projects-grid\">\n              <ProjectCard\n                title = \"Dissertation Project\"\n                text_color = '#fff'\n                url=\"https://s15.postimg.cc/ghwy5traz/diss_proj.png\"\n                card_text=\"Compromised and Degraded Network Simulation - The aim of the dissertation project was to create a custom simulated network that can demonstrate and visualise network degradation and common DoS attacks.\n                It uses the NetFilter section of the Linux Kernel to filter and minipulate network packets.\"\n                languages=\"Python,Linux\"\n                github_url=\"https://github.com/AidanFray/Dissertation-Project\"/>\n\n              <ProjectCard\n                title = \"Scale Generator\"\n                text_color = '#000'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/scale_logo.png\"\n                card_text=\"An application that is designed to randomly provide scales for practising musicians. This app is produced using Xamarin to proivde a cross platform application for iOS and Android.\"\n                languages=\"C#,Android,iOS\"\n                github_url=\"https://github.com/AidanFray/ScaleGenerator-iOS_Andriod\"/>\n\n              <ProjectCard\n                title = \"3D Graphics\"\n                text_color = '#fff'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/3d_sim.png\"\n                card_text=\"A university graphics and simulation project where the aim was to simulate various numbers of spheres falling through a column.\"\n                languages=\"C#\"\n                github_url=\"https://github.com/AidanFray/Simulation-and-3D-Graphics\"/>\n\n              <ProjectCard\n                title = \"Interactive Map of Hull\"\n                text_color = '#c024fe'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/interactive_map.png\"\n                card_text=\"A Javascript interactive map of Hull to celebrate the City of Culture.\"\n                languages=\"JS,HTML5\"\n                github_url=\"https://github.com/AidanFray/Interactive_Map\"/>\n\n              <ProjectCard\n                title = \"Sliding Tiles\"\n                text_color = '#000'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/mobile_logo.png\"\n                card_text=\"Sliding puzzle coursework submitted for a university mobile devices module. The goal was to create a small sliding puzzle game with dynamically download puzzles.\"\n                languages=\"Java,Android\"\n                github_url=\"https://github.com/AidanFray/Mobile_Devices_And_Applications\"/>\n\n              <ProjectCard\n                title = \"University Timetable Scraper\"\n                text_color = '#fff'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/hull_logo.png\"\n                card_text=\"Program that web scrapes the https://timetable.hull.ac.uk/ website to sync your timetable with outlook\"\n                languages=\"C#\"\n                github_url=\"https://github.com/AidanFray/Hull_Timetable_To_Outlook\"/>\n\n            </div>\n          </Cell>\n          <Cell>\n            <GithubCalendar/>\n          </Cell>\n        </Grid>\n      </div>\n      )\n    }\n  }\n\n        export default Landing;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Navigation, Drawer, Content } from 'react-mdl';\nimport LandingPage from './components/landingpage';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n            <Drawer title={<Link style={{textDecoration: 'none', color: '#000'}} to=\"/\">Menu</Link>}>\n          <Navigation>\n          </Navigation>\n        </Drawer>\n        <Content>\n          <LandingPage/>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n<App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}