{"version":3,"sources":["components/projectcard.jsx","components/githubcalendar.jsx","components/landingpage.jsx","App.jsx","index.jsx"],"names":["ProjectCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","languages","state","baseUrl","url","langauges_logos","languages_proc","text","logos","undefined","parts","split","i","length","lang","x","trim","push","react_default","a","createElement","style","fontSize","padding","class","className","lib","shadow","minWidth","height","margin","visibility","visible","alignItems","color","text_color","width","background","title","overflow","card_text","border","colored","href","github_url","extra_links","Component","availableThemes","today","Date","yearAgo","date","numDays","newDate","setDate","getDate","shiftDate","GithubCalendar","currentTheme","getMonth","submissions","display","theme","requestContributions","_this2","fetch","then","response","t","createSubmissionList","JSON","parse","catch","error","console","log","setState","list","c","contributions","submissionList","todayIndex","todayStr","year","getFullYear","month","day","concat","formatDate","count","newTheme","Math","floor","random","_this3","react_calendar_heatmap_umd_default","startDate","endDate","values","classForValue","value","tooltipDataAttrs","data-tip","onClick","changeTheme","dist_default","Landing","project_cards","project_padding_cards","updateWindowDimensions","bind","assertThisInitialized","createProjectCards","window","addEventListener","removeEventListener","innerWidth","innerHeight","cards","projectcard","blankCard","cardColumns","activeCards","paddingCardsRequired","remainder","addDynamicCardPadding","col","githubcalendar","id","App","landingpage","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3c1d1a6b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardTitle, CardText, CardActions, Button, CardMenu} from 'react-mdl';\n\nclass ProjectCard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      baseUrl: \"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/\" + this.props.url,\n      langauges_logos: []\n    };\n\n    this.languages_proc(this.props.languages)\n  }\n\n  // http://konpa.github.io/devicon/\n  languages =\n  [\n    [\"C++\", \"devicon-cplusplus-plain\"],\n    [\"Java\", \"devicon-java-plain\"],\n    [\"Python\", \"devicon-python-plain\"],\n    [\"C#\", \"devicon-csharp-plain\"],\n    [\"JS\", \"devicon-javascript-plain\"],\n    [\"HTML5\", \"devicon-html5-plain\"],\n    [\"Android\", \"devicon-android-plain\"],\n    [\"Linux\", \"devicon-linux-plain\"],\n    [\"iOS\", \"devicon-apple-original\"],\n    [\"Windows\", \"devicon-windows8-original\"],\n    [\"Go\", \"devicon-go-plain\"],\n    [\"PHP\", \"devicon-php-plain\"]\n  ]\n\n  // Creates a list of programming langauges dynamically that\n  // can be used to show what project tech was used\n  languages_proc(text) {\n\n    var logos = []\n\n    var sentence = text;\n\n    if (text !== undefined) {\n      var parts = sentence.split(\",\");\n\n      for (var i = 0; i < parts.length; i++) {\n        var lang = parts[i];\n\n        for (var x = 0; x < this.languages.length; x++) {\n          if (this.languages[x][0].trim() === lang) {\n            logos.push(<i style={{fontSize: \"25px\", padding: \"2px\"}} class={this.languages[x][1]}></i>);\n          }\n        }\n      }\n    }\n\n    //TODO: find a way not the change the state directly\n    // this.setState({langauges_logos: logos});\n    this.state.langauges_logos = logos;\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"project-item\">\n\n        <Card shadow={2} style={{minWidth: '250px', height: '400px', margin: 'auto', visibility: this.props.visible}}>\n       \n          <CardTitle  style={{alignItems: 'flex-start', \n                            color: this.props.text_color, \n                            height: '200px', \n                            width: '330px', \n                            background: 'url(' + this.state.baseUrl + ') center / cover'\n                          }}>\n            <div className=\"card-title\">\n              {this.props.title}\n            </div>\n          </CardTitle>\n\n          <CardText style={{\n              height: '100px', \n              overflow: 'auto',\n              }}>\n            <div className=\"card-text\">\n              {this.props.card_text}\n            </div>\n          </CardText>\n\n          <CardActions border>\n            {this.state.langauges_logos}\n          </CardActions>\n\n          <CardActions border style={{alignItems: 'flex-end'}}>\n            <Button colored href={this.props.github_url}>GitHub</Button>\n            {this.props.extra_links}\n          </CardActions>\n\n          <CardMenu style={{color: this.props.text_color}}>\n          </CardMenu>\n      </Card>\n    </div>\n  )\n}\n}\n\nexport default ProjectCard;\n","import React, { Component } from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"../Themes.css\";\n\nconst availableThemes = \n[\n  \"github\", \n  \"halloween\", \n  \"dracula\",\n  \"teal\",\n  \"YlGnBu\",\n  \"blue\"\n];\n\nconst today = new Date();\n\nconst yearAgo = shiftDate(today, -364);\n\n// Moves a set date back or forwards\nfunction shiftDate(date, numDays) {\n  var newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\n\n// Turn date object into a formatted string\nfunction formatDate(date) {\n  // For some reason date.getMonth() is a scale of 0 -> 11\n  // Therefore +1 is needed for correct formatting\n\n  var year = date.getFullYear();\n\n  // Padds the month and day\n  var month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  var day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  return `${year}-${month}-${day}`;\n}\n\nclass GithubCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    // Default theme is the classic github\n    var currentTheme = availableThemes[0];\n\n    // If it's halloween, the colour scheme changes\n    if (today.getMonth() + 1 === 10 && today.getDate() === 31) {\n      currentTheme = availableThemes[1];\n    }\n\n    this.state = {\n      submissions: [],\n      display: \"\",\n      theme: currentTheme\n    };\n    this.requestContributions();\n  }\n\n  // Sends a request to the API to request a JSON objects of contributions\n  requestContributions() {\n    var url = \"https://github-contributions-api.now.sh/v1/AidanFray\";\n    fetch(url)\n      .then(response => response.text())\n      .then(t => this.createSubmissionList(JSON.parse(t)))\n      .catch(error => {\n        console.log(\"[Github Contributions API] \" + error);\n\n        //Hides the element if there is a network issue\n        this.setState({\n          display: \"none\"\n        });\n      });\n  }\n\n  // Uses the JSON list of contributions to create a formatted list\n  createSubmissionList(list) {\n    var c = list.contributions;\n\n    var submissionList = [];\n\n    //Find today's date index\n    var todayIndex = 0;\n    var todayStr = formatDate(today);\n\n    //Gets today's index\n    for (var i = 0; i < c.length; i++) {\n      if (c[i].date === todayStr) {\n        todayIndex = i;\n        break;\n      }\n    }\n\n    for (var x = 0; x < 365; x++) {\n      submissionList.push({\n        date: c[todayIndex + x].date,\n        count: c[todayIndex + x].count\n      });\n    }\n\n    //Adds the submission list and displays the element\n    this.setState({\n      submissions: submissionList,\n      display: \"\"\n    });\n  }\n\n  changeTheme() {\n    var currentTheme = this.state.theme;\n    var newTheme = currentTheme;\n\n    while (currentTheme === newTheme) {\n      // Grabs a random index from the avaliableThemess\n      var i = Math.floor(Math.random() * availableThemes.length + 1) - 1;\n      newTheme = availableThemes[i]\n    }\n\n    this.setState({ theme: newTheme });\n  }\n\n  render() {\n    return (\n      <div\n        className={`${this.state.theme}-background`}\n        style={{\n          width: \"60%\",\n          margin: \"auto\",\n          display: this.state.display,\n          padding: \"25px\",\n        }}\n      >\n        <CalendarHeatmap\n          startDate={yearAgo}\n          endDate={today}\n          values={this.state.submissions}\n          classForValue={value => {\n            var count = 0;\n            if (value != null) {\n              // Max value\n              if (value.count > 4) {\n                count = 4;\n              } else {\n                count = value.count;\n              }\n            }\n\n            return `${this.state.theme}-color-scale-${count}`;\n          }}\n          tooltipDataAttrs={value => {\n            var count = 0;\n            if (value.count !== null) {\n              count = value.count;\n            }\n\n            return {\n              \"data-tip\": `${value.date} - Contributions: ${count}`\n            };\n          }}\n        />\n        <p />\n        <button onClick={() => this.changeTheme()}>Random Theme</button>\n        <ReactTooltip />\n      </div>\n    );\n  }\n}\n\nexport default GithubCalendar;\n","import React, { Component } from \"react\";\nimport { Grid, Cell, Button } from \"react-mdl\";\nimport ProjectCard from \"./projectcard\";\nimport GithubCalendar from \"./githubcalendar\";\n//import TypingElement from \"./typingelement\";\n\n///\n/// First page that the web app will arrive to\n///\n\n// Link for hosting images for testing\n/// https://postimages.org/\n\nclass Landing extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      width: 0, \n      height: 0,\n      project_cards: [],\n      project_padding_cards: []\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.createProjectCards()\n  }\n  \n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    this.setState({ \n      width: window.innerWidth, \n      height: window.innerHeight \n    });\n  }\n\n  createProjectCards() {\n    var cards = [];\n\n    cards.push(\n      <ProjectCard\n        title=\"Dissertation Project\"\n        text_color=\"#fff\"\n        url=\"diss_proj.png\"\n        card_text=\"Compromised and Degraded Network Simulation - The aim of the dissertation project was to create a custom simulated network that can demonstrate and visualise network degradation and common DoS attacks.\n        It uses the NetFilter section of the Linux Kernel to filter and manipulate network packets.\"\n        languages=\"Python,Linux\"\n        github_url=\"https://github.com/AidanFray/Dissertation-Project\"\n      />\n    )\n\n    cards.push(\n      <ProjectCard\n        title=\"Parcel\"\n        text_color=\"#a9653d\"\n        url=\"parcel_image.png\"\n        card_text=\" Python script used to simulate imperfect network conditions on a Linux OS.\n        The script utilises the NFQUEUE to apply degradation dynamically to packets.\"\n        languages=\"Python,Linux\"\n        github_url=\"https://github.com/AidanFray/Parcel\"\n      />\n    )\n\n    cards.push(\n      <ProjectCard\n        title=\"CTF Writeups\"\n        text_color=\"#fff\"\n        url=\"ctf_time.png\"\n        card_text=\"Personal write-ups of CTF competitions that I've competed in. The repo also includes files required to complete the challenges.\"\n        languages=\"Python,Go,JS,PHP\"\n        github_url=\"https://github.com/AidanFray/CTF_Writeups\"\n        extra_links={\n          <Button colored href=\"https://ctftime.org/team/68942\">\n            Team\n          </Button>\n        }\n      />\n    )\n\n    cards.push(\n      <ProjectCard\n        title=\"Scale Generator\"\n        text_color=\"#000\"\n        url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/scale_logo.png\"\n        card_text=\"An application that is designed to randomly provide scales for practising musicians. This app is produced using Xamarin to proivde a cross platform application for iOS and Android.\"\n        languages=\"C#,Android,iOS\"\n        github_url=\"https://github.com/AidanFray/ScaleGenerator-iOS_Andriod\"\n      />\n    )\n\n    cards.push(\n      <ProjectCard\n        title=\"3D Graphics\"\n        text_color=\"#fff\"\n        url=\"3d_sim.png\"\n        card_text=\"A university graphics and simulation project where the aim was to simulate \n        various numbers of spheres falling through a column.\"\n        languages=\"C#\"\n        github_url=\"https://github.com/AidanFray/Simulation-and-3D-Graphics\"\n        extra_links={\n          <Button\n            colored\n            href=\"https://www.youtube.com/watch?v=yxUFEYLiOiI\"\n          >\n            YouTube\n          </Button>\n        }\n      />\n    )\n    cards.push(\n      <ProjectCard\n        title=\"Interactive Map of Hull\"\n        text_color=\"#c024fe\"\n        url=\"interactive_map.png\"\n        card_text=\"A Javascript interactive map of Hull to celebrate the City of Culture.\"\n        languages=\"JS,HTML5\"\n        github_url=\"https://github.com/AidanFray/Interactive_Map\"\n        extra_links={\n          <Button\n            colored\n            href=\"https://aidanfray.github.io/Interactive_Map/\"\n          >\n            Website\n          </Button>\n        }\n      />\n\n    )\n    cards.push(\n      <ProjectCard\n        title=\"University Timetable Scraper\"\n        text_color=\"#fff\"\n        url=\"hull_logo.png\"\n        card_text=\"Program that web scrapes the https://timetable.hull.ac.uk/ website to sync your timetable with outlook\"\n        languages=\"C#\"\n        github_url=\"https://github.com/AidanFray/Hull_Timetable_To_Outlook\"\n      />\n\n    )\n    cards.push(\n      <ProjectCard\n        title=\"Sliding Tiles\"\n        text_color=\"#fff\"\n        url=\"mobile_logo.png\"\n        card_text=\"Sliding puzzle coursework submitted for a university mobile devices module. The goal was to create a small \n          sliding puzzle game with dynamically downloaded puzzles.\"\n        languages=\"Java,Android\"\n        github_url=\"https://github.com/AidanFray/Mobile_Devices_And_Applications\"\n      />\n    )\n\n    //TODO: find a way not the change the state directly\n    // this.setState({project_cards: cards});\n    this.state.project_cards = cards;\n  }\n\n  // Method dynamically adds an invisible card to alter the spacing\n  // this makes sure all cards are on grid lines\n  addDynamicCardPadding() {\n\n    //Resets padding cards\n    this.state.project_padding_cards = []\n    \n    var blankCard = <ProjectCard visible=\"hidden\" />\n\n    var cardWidth = 378;\n    var maxWidth = 1500;\n\n    var width = this.state.width;\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n\n    //Makes sure this method doesn't run on the first render\n    if (width === 0) return;\n\n    var cardColumns = Math.floor(width / cardWidth);\n    var activeCards = this.state.project_cards.length;\n\n    var paddingCardsRequired = 0;\n\n    //Check to make sure remainder does not become NaN\n    var remainder = 0\n    if (cardColumns !== 0) {\n      remainder = activeCards % cardColumns;\n    }\n\n    // Increases the active cards until a equal factor is found\n    while (true) {\n      if (remainder === 0) break;\n\n      paddingCardsRequired += 1;\n      activeCards += 1\n      remainder = activeCards % cardColumns;\n    }\n\n    //Adds all blank cards\n    for (var i = 0; i < paddingCardsRequired; i++) {\n      this.state.project_padding_cards.push(blankCard)\n    }\n  }\n\n  render() {\n\n    this.addDynamicCardPadding()\n\n    return (\n      <div>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <h1 className=\"title\">Aidan Fray</h1>\n            {/* TODO: Typing animation seems to not work after adding constructor to this class */}\n            {/* <TypingElement /> */}\n          </Cell>\n\n          <Cell col={12}>\n            <GithubCalendar />\n          </Cell>\n\n          <Cell col={12}>\n            <div id=\"limit\" className=\"projects-grid\">\n              {this.state.project_cards}\n              {this.state.project_padding_cards}\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Content} from \"react-mdl\";\nimport LandingPage from \"./components/landingpage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Content>\n            <LandingPage />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Themes.css'\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n<App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}