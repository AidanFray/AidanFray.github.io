{"version":3,"sources":["components/projectcard.jsx","components/githubcalendar.jsx","components/typingelement.jsx","components/landingpage.jsx","App.jsx","index.jsx"],"names":["ProjectCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","languages","langauges_logos","state","baseUrl","url","text","undefined","parts","split","i","length","lang","x","trim","push","react_default","a","createElement","style","fontSize","padding","class","languages_proc","className","lib","shadow","minWidth","height","margin","visibility","visible","alignItems","color","text_color","width","background","title","overflow","card_text","border","colored","href","github_url","Component","availableThemes","today","Date","yearAgo","date","numDays","newDate","setDate","getDate","shiftDate","GithubCalendar","currentTheme","console","log","getMonth","submissions","display","theme","requestContributions","_this2","fetch","then","response","t","createSubmissionList","JSON","parse","catch","error","setState","list","c","contributions","submissionList","todayIndex","todayStr","year","getFullYear","month","day","concat","formatDate","count","newTheme","Math","floor","random","_this3","react_calendar_heatmap_umd_default","startDate","endDate","values","classForValue","value","tooltipDataAttrs","data-tip","onClick","changeTheme","dist_default","TypingElement","words","typing_delay","typing_backspace","rnd","tmp","shuffle_list","words_to_type","print_text","react_typing_animation_dist_default","Delay","ms","Backspace","loop","Landing","col","typingelement","id","githubcalendar","projectcard","App","landingpage","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9b4efc95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardTitle, CardText, CardActions, Button, CardMenu} from 'react-mdl';\n\nclass ProjectCard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      baseUrl: \"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/\" + this.props.url \n    };\n  }\n\n  // http://konpa.github.io/devicon/\n  languages =\n  [\n    [\"C++\", \"devicon-cplusplus-plain\"],\n    [\"Java\", \"devicon-java-plain\"],\n    [\"Python\", \"devicon-python-plain\"],\n    [\"C#\", \"devicon-csharp-plain\"],\n    [\"JS\", \"devicon-javascript-plain\"],\n    [\"HTML5\", \"devicon-html5-plain\"],\n    [\"Android\", \"devicon-android-plain\"],\n    [\"Linux\", \"devicon-linux-plain\"],\n    [\"iOS\", \"devicon-apple-original\"],\n    [\"Windows\", \"devicon-windows8-original\"],\n    [\"Go\", \"devicon-go-plain\"],\n    [\"PHP\", \"devicon-php-plain\"]\n  ]\n\n  langauges_logos = []\n\n  // Creates a list of programming langauges dynamically that\n  // can be used to show what project tech was used\n  languages_proc(text) {\n    var sentence = text;\n\n    if (text !== undefined) {\n      var parts = sentence.split(\",\");\n\n      for (var i = 0; i < parts.length; i++) {\n        var lang = parts[i];\n\n        for (var x = 0; x < this.languages.length; x++) {\n          if (this.languages[x][0].trim() === lang) {\n            this.langauges_logos.push(<i style={{fontSize: \"25px\", padding: \"2px\"}} class={this.languages[x][1]}></i>);\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    this.languages_proc(this.props.languages)\n\n    return (\n\n      <div className=\"project-item\">\n\n        <Card shadow={2} style={{minWidth: '250px', height: '400px', margin: 'auto', visibility: this.props.visible}}>\n       \n          <CardTitle  style={{alignItems: 'flex-start', \n                            color: this.props.text_color, \n                            height: '200px', \n                            width: '330px', \n                            background: 'url(' + this.state.baseUrl + ') center / cover'\n                          }}>\n            <div className=\"card-title\">\n              {this.props.title}\n            </div>\n          </CardTitle>\n\n          <CardText style={{\n              height: '100px', \n              overflow: 'auto',\n              }}>\n            <div className=\"card-text\">\n              {this.props.card_text}\n            </div>\n          </CardText>\n\n          <CardActions border>\n            {this.langauges_logos}\n          </CardActions>\n\n          <CardActions border style={{alignItems: 'flex-end'}}>\n            <Button colored href={this.props.github_url}>GitHub</Button>\n          </CardActions>\n\n          <CardMenu style={{color: this.props.text_color}}>\n          </CardMenu>\n      </Card>\n    </div>\n  )\n}\n}\n\nexport default ProjectCard;\n","import React, { Component } from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"../Themes.css\";\n\nconst availableThemes = \n[\n  \"github\", \n  \"halloween\", \n  \"dracula\",\n  \"teal\",\n  \"YlGnBu\",\n  \"blue\"\n];\n\nconst today = new Date();\n\nconst yearAgo = shiftDate(today, -364);\n\n// Moves a set date back or forwards\nfunction shiftDate(date, numDays) {\n  var newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\n\n// Turn date object into a formatted string\nfunction formatDate(date) {\n  // For some reason date.getMonth() is a scale of 0 -> 11\n  // Therefore +1 is needed for correct formatting\n\n  var year = date.getFullYear();\n\n  // Padds the month and day\n  var month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  var day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  return `${year}-${month}-${day}`;\n}\n\nclass GithubCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    // Default theme is the classic github\n    var currentTheme = availableThemes[0];\n\n    console.log(today.getDate());\n\n    // If it's halloween, the colour scheme changes\n    if (today.getMonth() + 1 === 10 && today.getDate() === 31) {\n      currentTheme = availableThemes[1];\n    }\n\n    this.state = {\n      submissions: [],\n      display: \"\",\n      theme: currentTheme\n    };\n    this.requestContributions();\n  }\n\n  // Sends a request to the API to request a JSON objects of contributions\n  requestContributions() {\n    var url = \"https://github-contributions-api.now.sh/v1/AidanFray\";\n    fetch(url)\n      .then(response => response.text())\n      .then(t => this.createSubmissionList(JSON.parse(t)))\n      .catch(error => {\n        console.log(\"[Github Contributions API] \" + error);\n\n        //Hides the element if there is a network issue\n        this.setState({\n          display: \"none\"\n        });\n      });\n  }\n\n  // Uses the JSON list of contributions to create a formatted list\n  createSubmissionList(list) {\n    var c = list.contributions;\n\n    var submissionList = [];\n\n    //Find today's date index\n    var todayIndex = 0;\n    var todayStr = formatDate(today);\n\n    //Gets today's index\n    for (var i = 0; i < c.length; i++) {\n      if (c[i].date === todayStr) {\n        todayIndex = i;\n        break;\n      }\n    }\n\n    for (var x = 0; x < 365; x++) {\n      submissionList.push({\n        date: c[todayIndex + x].date,\n        count: c[todayIndex + x].count\n      });\n    }\n\n    //Adds the submission list and displays the element\n    this.setState({\n      submissions: submissionList,\n      display: \"\"\n    });\n  }\n\n  changeTheme() {\n    var currentTheme = this.state.theme;\n    var newTheme = currentTheme;\n\n    while (currentTheme === newTheme) {\n      // Grabs a random index from the avaliableThemess\n      var i = Math.floor(Math.random() * availableThemes.length + 1) - 1;\n      newTheme = availableThemes[i]\n    }\n\n    this.setState({ theme: newTheme });\n  }\n\n  render() {\n    return (\n      <div\n        className={`${this.state.theme}-background`}\n        style={{\n          width: \"75%\",\n          margin: \"auto\",\n          display: this.state.display,\n          padding: \"25px\",\n        }}\n      >\n        <CalendarHeatmap\n          startDate={yearAgo}\n          endDate={today}\n          values={this.state.submissions}\n          classForValue={value => {\n            var count = 0;\n            if (value != null) {\n              // Max value\n              if (value.count > 4) {\n                count = 4;\n              } else {\n                count = value.count;\n              }\n            }\n\n            return `${this.state.theme}-color-scale-${count}`;\n          }}\n          tooltipDataAttrs={value => {\n            var count = 0;\n            if (value.count !== null) {\n              count = value.count;\n            }\n\n            return {\n              \"data-tip\": `${value.date} - Contributions: ${count}`\n            };\n          }}\n        />\n        <p />\n        <button onClick={() => this.changeTheme()}>Random Theme</button>\n        <ReactTooltip />\n      </div>\n    );\n  }\n}\n\nexport default GithubCalendar;\n","import React, { Component } from 'react';\nimport Typing from 'react-typing-animation';\n\nclass TypingElement extends Component {\n\n  // New words to be placed here to be typed onto the screen\n  words =\n  [\n    //<Name>   <Color>\n    [\"Python\", \"\"],\n    [\".NET\", \"\"],\n    [\"Wireshark\", \"\"],\n    [\"Arch Linux\", \"\"],\n    [\"C++\", \"\"],\n    [\"Java\", \"\"],\n    [\"TeX\", \"\"]\n  ];\n  typing_delay = 3000;\n  typing_backspace = 20;\n\n  shuffle_list() {\n    for (var i = 0; i < this.words.length; i++) {\n\n      // Randomises the list swap position\n      var rnd = Math.floor((Math.random() * this.words.length));\n\n      var tmp = this.words[i];\n      this.words[i] = this.words[rnd];\n      this.words[rnd] = tmp;\n    }\n  }\n\n  print_text(text, color) {\n    return(\n      <h1 className=\"typing-text\" style={{color: color}}>{text}</h1>\n    )\n  }\n\n  render() {\n    this.shuffle_list();\n\n    var words_to_type = [];\n\n    // Dynamically creates the typing formatted code\n    for (var i = 0; i < this.words.length; i++) {\n      words_to_type.push(\n        <span>\n          {this.print_text(this.words[i][0], this.words[i][1])}\n          <Typing.Delay ms={this.typing_delay} />\n          <Typing.Backspace count={this.typing_backspace} />\n        </span>\n      )\n    }\n\n    return(\n      <div>\n        <Typing loop={true}>\n            {words_to_type}\n        </Typing>\n      </div>)\n    }\n  }\n\n  export default TypingElement;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport ProjectCard from './projectcard';\nimport GithubCalendar from './githubcalendar';\nimport TypingElement from './typingelement'\n\n///\n/// First page that the web app will arrive to\n///\n\n// Link for hosting images for testing\n/// https://postimages.org/\n\nclass Landing extends Component {\n\n  render() {\n    return(\n      <div>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <h1 className=\"title\">Aidan Fray</h1>\n            <TypingElement/>\n          </Cell>\n          <Cell col={12}>\n            <div id=\"limit\" className=\"projects-grid\">\n              <GithubCalendar/>\n\n              <ProjectCard\n                title = \"Dissertation Project\"\n                text_color = '#fff'\n                url=\"diss_proj.png\"\n                card_text=\"Compromised and Degraded Network Simulation - The aim of the dissertation project was to create a custom simulated network that can demonstrate and visualise network degradation and common DoS attacks.\n                It uses the NetFilter section of the Linux Kernel to filter and manipulate network packets.\"\n                languages=\"Python,Linux\"\n                github_url=\"https://github.com/AidanFray/Dissertation-Project\"/>\n\n              <ProjectCard\n                title = \"Parcel\"\n                text_color = '#a9653d'\n                url=\"parcel_img.png\"\n                card_text=\" Python script used to simulate imperfect network conditions on a Linux OS.\n                The script utilises the NFQUEUE to degradation dynamically to packets.\"\n                languages=\"Python,Linux\"\n                github_url=\"https://github.com/AidanFray/Parcel\"/>\n\n              <ProjectCard\n                title = \"Square CTF 2018\"\n                text_color = '#000'\n                url=\"square.png\"\n                card_text=\"Online Jeopardy style CTF Hosted over the period of three days. \n                Challenges included examples like:\n                Reverse engineering, cryptography and side channel attacks amongst others\"\n                languages=\"Python,Go,JS,PHP\"\n                github_url=\"https://github.com/AidanFray/SquareCTF_2018\"/>\n\n              <ProjectCard\n                title = \"Scale Generator\"\n                text_color = '#000'\n                url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/scale_logo.png\"\n                card_text=\"An application that is designed to randomly provide scales for practising musicians. This app is produced using Xamarin to proivde a cross platform application for iOS and Android.\"\n                languages=\"C#,Android,iOS\"\n                github_url=\"https://github.com/AidanFray/ScaleGenerator-iOS_Andriod\"/>\n\n              <ProjectCard\n                title = \"3D Graphics\"\n                text_color = '#fff'\n                url=\"3d_sim.png\"\n                card_text=\"A university graphics and simulation project where the aim was to simulate various numbers of spheres falling through a column.\"\n                languages=\"C#\"\n                github_url=\"https://github.com/AidanFray/Simulation-and-3D-Graphics\"/>\n\n              <ProjectCard\n                title = \"Interactive Map of Hull\"\n                text_color = '#c024fe'\n                url=\"interactive_map.png\"\n                card_text=\"A Javascript interactive map of Hull to celebrate the City of Culture.\"\n                languages=\"JS,HTML5\"\n                github_url=\"https://github.com/AidanFray/Interactive_Map\"/>\n\n              <ProjectCard\n                title = \"University Timetable Scraper\"\n                text_color = '#fff'\n                url=\"hull_logo.png\"\n                card_text=\"Program that web scrapes the https://timetable.hull.ac.uk/ website to sync your timetable with outlook\"\n                languages=\"C#\"\n                github_url=\"https://github.com/AidanFray/Hull_Timetable_To_Outlook\"/>\n\n              <ProjectCard\n                  title = \"Sliding Tiles\"\n                  text_color = '#fff'\n                  url=\"mobile_logo.png\"\n                  card_text=\"Sliding puzzle coursework submitted for a university mobile devices module. The goal was to create a small sliding puzzle game with dynamically download puzzles.\"\n                  languages=\"Java,Android\"\n                  github_url=\"https://github.com/AidanFray/Mobile_Devices_And_Applications\"/>\n\n              <ProjectCard visible = \"hidden\"/>\n              \n            </div>\n          </Cell>\n        </Grid>\n      </div>\n      )\n    }\n  }\n\n        export default Landing;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Content, Header} from \"react-mdl\";\nimport LandingPage from \"./components/landingpage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Content>\n            <LandingPage />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Themes.css'\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n<App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}