{"version":3,"sources":["components/projectcard.jsx","components/githubcalendar.jsx","components/landingpage.jsx","components/typingelement.jsx","App.jsx","index.jsx"],"names":["ProjectCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","languages","state","baseUrl","url","langauges_logos","text","undefined","parts","split","i","length","lang","x","trim","push","react_default","a","createElement","style","fontSize","padding","class","languages_proc","className","lib","shadow","minWidth","height","margin","visibility","visible","alignItems","color","text_color","width","background","title","overflow","card_text","border","colored","href","github_url","extra_links","Component","availableThemes","today","Date","yearAgo","date","numDays","newDate","setDate","getDate","shiftDate","GithubCalendar","currentTheme","getMonth","submissions","display","theme","requestContributions","_this2","fetch","then","response","t","createSubmissionList","JSON","parse","catch","error","console","log","setState","list","c","contributions","submissionList","todayIndex","todayStr","year","getFullYear","month","day","concat","formatDate","count","newTheme","Math","floor","random","_this3","react_calendar_heatmap_umd_default","startDate","endDate","values","classForValue","value","tooltipDataAttrs","data-tip","onClick","changeTheme","dist_default","Landing","project_cards","project_padding_cards","updateWindowDimensions","bind","assertThisInitialized","createProjectCards","window","addEventListener","removeEventListener","innerWidth","innerHeight","cards_drawn","projectcard","blankCard","cardColumns","activeCards","paddingCardsRequired","remainder","addDynamicCardPadding","col","githubcalendar","id","App","landingpage","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b5394f0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardTitle, CardText, CardActions, Button, CardMenu} from 'react-mdl';\n\nclass ProjectCard extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      baseUrl: \"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/\" + this.props.url,\n      langauges_logos: []\n    };\n  }\n\n  // http://konpa.github.io/devicon/\n  languages =\n  [\n    [\"C++\", \"devicon-cplusplus-plain\"],\n    [\"Java\", \"devicon-java-plain\"],\n    [\"Python\", \"devicon-python-plain\"],\n    [\"C#\", \"devicon-csharp-plain\"],\n    [\"JS\", \"devicon-javascript-plain\"],\n    [\"HTML5\", \"devicon-html5-plain\"],\n    [\"Android\", \"devicon-android-plain\"],\n    [\"Linux\", \"devicon-linux-plain\"],\n    [\"iOS\", \"devicon-apple-original\"],\n    [\"Windows\", \"devicon-windows8-original\"],\n    [\"Go\", \"devicon-go-plain\"],\n    [\"PHP\", \"devicon-php-plain\"]\n  ]\n\n  // Creates a list of programming langauges dynamically that\n  // can be used to show what project tech was used\n  languages_proc(text) {\n    this.state.langauges_logos = []\n    var sentence = text;\n\n    if (text !== undefined) {\n      var parts = sentence.split(\",\");\n\n      for (var i = 0; i < parts.length; i++) {\n        var lang = parts[i];\n\n        for (var x = 0; x < this.languages.length; x++) {\n          if (this.languages[x][0].trim() === lang) {\n            this.state.langauges_logos.push(<i style={{fontSize: \"25px\", padding: \"2px\"}} class={this.languages[x][1]}></i>);\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    this.languages_proc(this.props.languages)\n\n    return (\n\n      <div className=\"project-item\">\n\n        <Card shadow={2} style={{minWidth: '250px', height: '400px', margin: 'auto', visibility: this.props.visible}}>\n       \n          <CardTitle  style={{alignItems: 'flex-start', \n                            color: this.props.text_color, \n                            height: '200px', \n                            width: '330px', \n                            background: 'url(' + this.state.baseUrl + ') center / cover'\n                          }}>\n            <div className=\"card-title\">\n              {this.props.title}\n            </div>\n          </CardTitle>\n\n          <CardText style={{\n              height: '100px', \n              overflow: 'auto',\n              }}>\n            <div className=\"card-text\">\n              {this.props.card_text}\n            </div>\n          </CardText>\n\n          <CardActions border>\n            {this.state.langauges_logos}\n          </CardActions>\n\n          <CardActions border style={{alignItems: 'flex-end'}}>\n            <Button colored href={this.props.github_url}>GitHub</Button>\n            {this.props.extra_links}\n          </CardActions>\n\n          <CardMenu style={{color: this.props.text_color}}>\n          </CardMenu>\n      </Card>\n    </div>\n  )\n}\n}\n\nexport default ProjectCard;\n","import React, { Component } from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"../Themes.css\";\n\nconst availableThemes = \n[\n  \"github\", \n  \"halloween\", \n  \"dracula\",\n  \"teal\",\n  \"YlGnBu\",\n  \"blue\"\n];\n\nconst today = new Date();\n\nconst yearAgo = shiftDate(today, -364);\n\n// Moves a set date back or forwards\nfunction shiftDate(date, numDays) {\n  var newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\n\n// Turn date object into a formatted string\nfunction formatDate(date) {\n  // For some reason date.getMonth() is a scale of 0 -> 11\n  // Therefore +1 is needed for correct formatting\n\n  var year = date.getFullYear();\n\n  // Padds the month and day\n  var month = date.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  var day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  return `${year}-${month}-${day}`;\n}\n\nclass GithubCalendar extends Component {\n  constructor(props) {\n    super(props);\n\n    // Default theme is the classic github\n    var currentTheme = availableThemes[0];\n\n    // If it's halloween, the colour scheme changes\n    if (today.getMonth() + 1 === 10 && today.getDate() === 31) {\n      currentTheme = availableThemes[1];\n    }\n\n    this.state = {\n      submissions: [],\n      display: \"\",\n      theme: currentTheme\n    };\n    this.requestContributions();\n  }\n\n  // Sends a request to the API to request a JSON objects of contributions\n  requestContributions() {\n    var url = \"https://github-contributions-api.now.sh/v1/AidanFray\";\n    fetch(url)\n      .then(response => response.text())\n      .then(t => this.createSubmissionList(JSON.parse(t)))\n      .catch(error => {\n        console.log(\"[Github Contributions API] \" + error);\n\n        //Hides the element if there is a network issue\n        this.setState({\n          display: \"none\"\n        });\n      });\n  }\n\n  // Uses the JSON list of contributions to create a formatted list\n  createSubmissionList(list) {\n    var c = list.contributions;\n\n    var submissionList = [];\n\n    //Find today's date index\n    var todayIndex = 0;\n    var todayStr = formatDate(today);\n\n    //Gets today's index\n    for (var i = 0; i < c.length; i++) {\n      if (c[i].date === todayStr) {\n        todayIndex = i;\n        break;\n      }\n    }\n\n    for (var x = 0; x < 365; x++) {\n      submissionList.push({\n        date: c[todayIndex + x].date,\n        count: c[todayIndex + x].count\n      });\n    }\n\n    //Adds the submission list and displays the element\n    this.setState({\n      submissions: submissionList,\n      display: \"\"\n    });\n  }\n\n  changeTheme() {\n    var currentTheme = this.state.theme;\n    var newTheme = currentTheme;\n\n    while (currentTheme === newTheme) {\n      // Grabs a random index from the avaliableThemess\n      var i = Math.floor(Math.random() * availableThemes.length + 1) - 1;\n      newTheme = availableThemes[i]\n    }\n\n    this.setState({ theme: newTheme });\n  }\n\n  render() {\n    return (\n      <div\n        className={`${this.state.theme}-background`}\n        style={{\n          width: \"60%\",\n          margin: \"auto\",\n          display: this.state.display,\n          padding: \"25px\",\n        }}\n      >\n        <CalendarHeatmap\n          startDate={yearAgo}\n          endDate={today}\n          values={this.state.submissions}\n          classForValue={value => {\n            var count = 0;\n            if (value != null) {\n              // Max value\n              if (value.count > 4) {\n                count = 4;\n              } else {\n                count = value.count;\n              }\n            }\n\n            return `${this.state.theme}-color-scale-${count}`;\n          }}\n          tooltipDataAttrs={value => {\n            var count = 0;\n            if (value.count !== null) {\n              count = value.count;\n            }\n\n            return {\n              \"data-tip\": `${value.date} - Contributions: ${count}`\n            };\n          }}\n        />\n        <p />\n        <button onClick={() => this.changeTheme()}>Random Theme</button>\n        <ReactTooltip />\n      </div>\n    );\n  }\n}\n\nexport default GithubCalendar;\n","import React, { Component } from \"react\";\nimport { Grid, Cell, Button } from \"react-mdl\";\nimport ProjectCard from \"./projectcard\";\nimport GithubCalendar from \"./githubcalendar\";\nimport TypingElement from \"./typingelement\";\n\n///\n/// First page that the web app will arrive to\n///\n\n// Link for hosting images for testing\n/// https://postimages.org/\n\nclass Landing extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      width: 0, \n      height: 0,\n      project_cards: [],\n      project_padding_cards: []\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.createProjectCards()\n  }\n  \n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    this.setState({ \n      width: window.innerWidth, \n      height: window.innerHeight \n    });\n  }\n\n  createProjectCards() {\n    this.state.cards_drawn = true\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"Dissertation Project\"\n        text_color=\"#fff\"\n        url=\"diss_proj.png\"\n        card_text=\"Compromised and Degraded Network Simulation - The aim of the dissertation project was to create a custom simulated network that can demonstrate and visualise network degradation and common DoS attacks.\n        It uses the NetFilter section of the Linux Kernel to filter and manipulate network packets.\"\n        languages=\"Python,Linux\"\n        github_url=\"https://github.com/AidanFray/Dissertation-Project\"\n      />\n    )\n\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"Parcel\"\n        text_color=\"#a9653d\"\n        url=\"parcel_image.png\"\n        card_text=\" Python script used to simulate imperfect network conditions on a Linux OS.\n        The script utilises the NFQUEUE to apply degradation dynamically to packets.\"\n        languages=\"Python,Linux\"\n        github_url=\"https://github.com/AidanFray/Parcel\"\n      />\n    )\n\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"CTF Writeups\"\n        text_color=\"#fff\"\n        url=\"ctf_time.png\"\n        card_text=\"Personal write-ups of CTF competitions that I've competed in. The repo also includes files required to complete the challenges.\"\n        languages=\"Python,Go,JS,PHP\"\n        github_url=\"https://github.com/AidanFray/CTF_Writeups\"\n        extra_links={\n          <Button colored href=\"https://ctftime.org/team/68942\">\n            Team\n          </Button>\n        }\n      />\n    )\n\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"Scale Generator\"\n        text_color=\"#000\"\n        url=\"https://raw.githubusercontent.com/AidanFray/gh-pages-portfolio/master/src/project_images/scale_logo.png\"\n        card_text=\"An application that is designed to randomly provide scales for practising musicians. This app is produced using Xamarin to proivde a cross platform application for iOS and Android.\"\n        languages=\"C#,Android,iOS\"\n        github_url=\"https://github.com/AidanFray/ScaleGenerator-iOS_Andriod\"\n      />\n    )\n\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"3D Graphics\"\n        text_color=\"#fff\"\n        url=\"3d_sim.png\"\n        card_text=\"A university graphics and simulation project where the aim was to simulate \n        various numbers of spheres falling through a column.\"\n        languages=\"C#\"\n        github_url=\"https://github.com/AidanFray/Simulation-and-3D-Graphics\"\n        extra_links={\n          <Button\n            colored\n            href=\"https://www.youtube.com/watch?v=yxUFEYLiOiI\"\n          >\n            YouTube\n          </Button>\n        }\n      />\n    )\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"Interactive Map of Hull\"\n        text_color=\"#c024fe\"\n        url=\"interactive_map.png\"\n        card_text=\"A Javascript interactive map of Hull to celebrate the City of Culture.\"\n        languages=\"JS,HTML5\"\n        github_url=\"https://github.com/AidanFray/Interactive_Map\"\n        extra_links={\n          <Button\n            colored\n            href=\"https://aidanfray.github.io/Interactive_Map/\"\n          >\n            Website\n          </Button>\n        }\n      />\n\n    )\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"University Timetable Scraper\"\n        text_color=\"#fff\"\n        url=\"hull_logo.png\"\n        card_text=\"Program that web scrapes the https://timetable.hull.ac.uk/ website to sync your timetable with outlook\"\n        languages=\"C#\"\n        github_url=\"https://github.com/AidanFray/Hull_Timetable_To_Outlook\"\n      />\n\n    )\n    this.state.project_cards.push(\n      <ProjectCard\n        title=\"Sliding Tiles\"\n        text_color=\"#fff\"\n        url=\"mobile_logo.png\"\n        card_text=\"Sliding puzzle coursework submitted for a university mobile devices module. The goal was to create a small \n          sliding puzzle game with dynamically downloaded puzzles.\"\n        languages=\"Java,Android\"\n        github_url=\"https://github.com/AidanFray/Mobile_Devices_And_Applications\"\n      />\n    )\n  }\n\n  // Method dynamically adds an invisible card to alter the spacing\n  // this makes sure all cards are on grid lines\n  addDynamicCardPadding() {\n\n    //Resets padding cards\n    this.state.project_padding_cards = []\n    \n    var blankCard = <ProjectCard visible=\"hidden\" />\n\n    var cardWidth = 378;\n    var maxWidth = 1500;\n\n    var width = this.state.width;\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n\n    //Makes sure this method doesn't run on the first render\n    if (width == 0) return;\n\n    var cardColumns = Math.floor(width / cardWidth);\n    var activeCards = this.state.project_cards.length;\n\n    var paddingCardsRequired = 0;\n\n    //Check to make sure remainder does not become NaN\n    var remainder = 0\n    if (cardColumns != 0) {\n      remainder = activeCards % cardColumns;\n    }\n\n    // Increases the active cards until a equal factor is found\n    while (true) {\n      if (remainder === 0) break;\n\n      paddingCardsRequired += 1;\n      activeCards += 1\n      remainder = activeCards % cardColumns;\n    }\n\n    for (var i = 0; i < paddingCardsRequired; i++) {\n      this.state.project_padding_cards.push(blankCard)\n    }\n\n    console.log(this.state.project_padding_cards)\n  }\n\n  render() {\n\n    {this.addDynamicCardPadding()}\n\n    return (\n      <div>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <h1 className=\"title\">Aidan Fray</h1>\n            {/* TODO: Typing animation seems to not work after adding constructor to this class */}\n            {/* <TypingElement /> */}\n          </Cell>\n\n          <Cell col={12}>\n            <GithubCalendar />\n          </Cell>\n\n          <Cell col={12}>\n            <div id=\"limit\" className=\"projects-grid\">\n              {this.state.project_cards}\n              {this.state.project_padding_cards}\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport Typing from 'react-typing-animation';\n\nclass TypingElement extends Component {\n\n  // New words to be placed here to be typed onto the screen\n  words =\n  [\n    //<Name>   <Color>\n    [\"Python\", \"\"],\n    [\".NET\", \"\"],\n    [\"Wireshark\", \"\"],\n    [\"Arch Linux\", \"\"],\n    [\"C++\", \"\"],\n    [\"Java\", \"\"],\n    [\"TeX\", \"\"]\n  ];\n  typing_delay = 3000;\n  typing_backspace = 20;\n\n  shuffle_list() {\n    for (var i = 0; i < this.words.length; i++) {\n\n      // Randomises the list swap position\n      var rnd = Math.floor((Math.random() * this.words.length));\n\n      var tmp = this.words[i];\n      this.words[i] = this.words[rnd];\n      this.words[rnd] = tmp;\n    }\n  }\n\n  print_text(text, color) {\n    return(\n      <h1 className=\"typing-text\" style={{color: color}}>{text}</h1>\n    )\n  }\n\n  render() {\n    this.shuffle_list();\n\n    var words_to_type = [];\n\n    // Dynamically creates the typing formatted code\n    for (var i = 0; i < this.words.length; i++) {\n      words_to_type.push(\n        <span>\n          {this.print_text(this.words[i][0], this.words[i][1])}\n          <Typing.Delay ms={this.typing_delay} />\n          <Typing.Backspace count={this.typing_backspace} />\n        </span>\n      )\n    }\n\n    return(\n      <div>\n        <Typing loop={true}>\n            {words_to_type}\n        </Typing>\n      </div>)\n    }\n  }\n\n  export default TypingElement;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Content} from \"react-mdl\";\nimport LandingPage from \"./components/landingpage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Content>\n            <LandingPage />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Themes.css'\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n<App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n"],"sourceRoot":""}